<script src="https://source.zoom.us/1.7.7/lib/vendor/react.min.js"></script>
<script src="https://source.zoom.us/1.7.7/lib/vendor/react-dom.min.js"></script>
<script src="https://source.zoom.us/1.7.7/lib/vendor/redux.min.js"></script>
<script src="https://source.zoom.us/1.7.7/lib/vendor/redux-thunk.min.js"></script>
<script src="https://source.zoom.us/1.7.7/lib/vendor/jquery.min.js"></script>
<script src="https://source.zoom.us/1.7.7/lib/vendor/lodash.min.js"></script>

<script src="https://source.zoom.us/zoom-meeting-1.7.7.min.js"></script>

<script type="text/javascript">

(function() {
  $(".d-header").hide();

  ZoomMtg.preLoadWasm();
  ZoomMtg.prepareJssdk();

  const path = window.location.pathname;
  const meetingId = path.split("/zoom/webinars/")[1].split("/sdk")[0];

  var getParams = function(url) {
    var params = {};
    var parser = document.createElement("a");
    parser.href = url;
    var query = parser.search.substring(1);
    var vars = query.split("&");
    for (var i = 0; i < vars.length; i++) {
      var pair = vars[i].split("=");
      params[pair[0]] = decodeURIComponent(pair[1]);
    }
    return params;
  };

  $.ajax({
    url: `/zoom/webinars/${meetingId}/signature.json`
  }).done(function(res) {
    ZoomMtg.init({
      leaveUrl: res.topic_url,
      isSupportAV: true,
      // audioPanelAlwaysOpen: false,
      // disableJoinAudio: true,
      // disableCallOut: true,
      success: function() {
        ZoomMtg.join({
          meetingNumber: res.id,
          userName: res.username,
          signature: res.signature,
          apiKey: res.api_key,
          userEmail: res.email,
          passWord: res.password || null,
          success: function(res) {
            setTimeout(function() {
              $("#dialog-join .title.tab:nth-child(2) button").click(); // default to Computer Audio
            }, 200);

            // ZoomMtg.inMeetingServiceListener('onMeetingStatus', function (data) {
            //   // status: 1(connecting), 2(connected), 3(disconnected), 4(reconnecting)
            //   console.log(data);
            // });

          },
          error: function(join_result) {
            console.log(join_result);
            if (join_result.errorCode === 1) {
              const params = getParams(window.location.href);
              if (params.fallback) {
                window.setTimeout(() => {
                  let btn = `<a href="https://zoom.us/j/${res.id}" id="zoom-fallback" class="zm-btn zm-btn-legacy zm-btn--primary zm-btn__outline--blue" >Launch in Zoom</a>`;
                  $(".zm-modal-body-content .content").html(
                    `<p>There was a problem launching the Zoom SDK. Click the button below to try joining the event in Zoom.</p> ${btn}`
                  );
                }, 200);
              }
            }
          }
        });
      },
      error: function(res) {
        console.log("error generating signature");
      }
    });
  });
})();

</script>

<div id="join_meeting"></div>

<style type="text/css">
  .q-a-input-box__input-area {
    padding: 0px;
    font-size: 16px;
  }

  #chat-textarea {
    font-size: 16px;
    width: calc(100% - 20px);
  }
  .q-a-container {
    word-break: break-word;
  }

  .meeting-app .main-layout {
    padding-top: env(safe-area-inset-top);
  }

  .zm-modal-body-content #zoom-fallback {
    display: block;
    width: 180px;
    text-align: center;
    margin: 2em auto;
    margin-bottom: 0em;
    color: white;
    line-height: 1.4em;
  }

  /* Zoom styling overrides for mobile */
  @media screen and (max-width: 680px),
  (max-width: 812px) and (orientation: landscape) {
    .footer {
      margin-bottom: env(safe-area-inset-bottom);
    }

    button#moreButton {
      display: none;
    }

    .more-button .btn-group {
      margin-top: 5px;
    }

    ul.more-button__pop-menu.dropdown-menu {
      display: block;
      margin-left: 5px;
      background-color: transparent;
      border: none;
      box-shadow: none;
      text-align: right;
      width: auto;
    }

    ul.more-button__pop-menu.dropdown-menu li {
      display: inline-block;
    }

    ul.more-button__pop-menu.dropdown-menu div.common-ui-component__dropdown-divider {
      display: none;
    }

    ul.more-button__pop-menu.dropdown-menu > li > a {
      padding-left: 6px;
      padding-right: 6px;
    }

    .diaout-layer {
      max-width: 100%;
    }

    #dialog-join .tab {
      width: calc(50vw);
    }

    #dialog-join .tab:first-child {
      width: calc(50vw - 60px);
      padding-left: 20px;
    }

    #dialog-join .tab .tab-title {
      font-size: 15px;
    }

    div[aria-label="Question and Answer"] > .common-window {
      transform: scale(0.75) translate(0px, 0px) !important;
    }

    div[aria-label="Zoom Group Chat"] > .common-window {
      transform: scale(0.85) translate(0px, 0px) !important;
    }

    .zm-modal {
      transform: scale(0.75);
    }

    .full-screen-widget {
      display: none !important;
    }
  }

  /* Landscape mobile only overrides */
  @media screen and (max-width: 812px) and (orientation: landscape) {
    .diaout-layer {
      transform: scale(0.75);
    }

    div[aria-label="Question and Answer"] {
      transform: translate(-50%, -50%) !important;
    }

    .q-a-welcome {
      height: 240px;
    }

    .chat-scrollbar,
    .chat-scrollbar .ReactVirtualized__List {
      height: 185px !important;
    }

    #wc-container .attendee-content {
      width: 100%;
    }
  }

  @media screen and (max-width: 340px) {
    #wc-footer .join-audio, #wc-footer .mute {
      min-width: 65px;
    }

    ul.more-button__pop-menu.dropdown-menu > li > a {
      padding-left: 4px;
      padding-right: 4px;
    }
  }
</style>
